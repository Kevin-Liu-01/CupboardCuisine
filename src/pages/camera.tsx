// import { signIn, signOut, useSession } from "next-auth/react";
import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
// import Link from "next/link";
import { Box, Grid } from "@radix-ui/themes";

import Form from "../components/form";

// import { api } from "~/utilscol/api";

export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>LET ME COOK</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="font-primary flex h-screen w-full flex-col items-center justify-center gap-12">
        <Grid columns="2" gap="0" width="100%" height="100%">
          <Box className="from-primary to-secondary align-center col-span-2 flex h-full flex-col justify-center bg-gradient-to-b p-6 sm:col-span-1 sm:p-12">
            <Form />
          </Box>

          <Box
            className="bg-light align-center hidden justify-center sm:flex"
            // direction="column"
            // gap="2"
          >
            <Image
              src="/assets/cooking-soup.svg"
              alt="soup"
              width="500"
              height="500"
            />
          </Box>
        </Grid>
      </div>
    </>
  );
}

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
